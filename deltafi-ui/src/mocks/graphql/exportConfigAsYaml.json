{
  "exportConfigAsYaml": "mock-deltafi-stix:\n  egressActions:\n    Stix1_xEgressAction:\n      parameters:\n        egressFlow: stix1_x\n        metadataKey: deltafiMetadata\n        url: http://deltafi-egress-sink-service\n      type: org.deltafi.core.action.RestPostEgressAction\n    Stix2_1EgressAction:\n      parameters:\n        egressFlow: stix2_1\n        metadataKey: deltafiMetadata\n        url: http://deltafi-egress-sink-service\n      type: org.deltafi.core.action.RestPostEgressAction\n  egressFlows:\n    deltafi-stix.stix2_1:\n      egressAction: Stix2_1EgressAction\n      formatAction: Stix2_1FormatAction\n      validateActions:\n      - Stix2_1ValidateAction\n    deltafi-stix.stix1_x:\n      egressAction: Stix1_xEgressAction\n      formatAction: Stix1_xFormatAction\n      validateActions:\n      - Stix1_xValidateAction\n  flowPlan: deltafi-stix\n  formatActions:\n    Stix1_xFormatAction:\n      requiresDomains:\n      - stix\n      type: org.deltafi.stix.actions.Stix1_XFormatAction\n    Stix2_1FormatAction:\n      requiresDomains:\n      - stix\n      type: org.deltafi.stix.actions.Stix2_1FormatAction\n  ingressFlows:\n    deltafi-stix.stix2_1:\n      loadAction: Stix2_1LoadAction\n      type: stix2_1\n    deltafi-stix.stix1_x:\n      loadAction: Stix2_1LoadAction\n      transformActions:\n      - Stix1_xTo2_1TransformAction\n      type: stix1_x\n  loadActions:\n    Stix2_1LoadAction:\n      consumes: stix2_1\n      type: org.deltafi.stix.actions.StixLoadAction\n  transformActions:\n    Stix1_xTo2_1TransformAction:\n      consumes: stix1_x\n      produces: stix2_1\n      type: org.deltafi.stix.actions.StixTransformAction\n  validateActions:\n    Stix1_xValidateAction:\n      type: org.deltafi.stix.actions.RubberStampValidateAction\n    Stix2_1ValidateAction:\n      type: org.deltafi.stix.actions.RubberStampValidateAction\nsmoke:\n  egressActions:\n    SmokeEgressAction:\n      parameters:\n        egressFlow: smoke\n        metadataKey: deltafiMetadata\n        url: http://deltafi-egress-sink-service\n      type: org.deltafi.core.action.RestPostEgressAction\n  egressFlows:\n    smoke.egressFlow:\n      egressAction: SmokeEgressAction\n      enrichActions:\n      - SmokeEnrichAction\n      formatAction: SmokeFormatAction\n      validateActions:\n      - SmokeValidateAction\n  enrichActions:\n    SmokeEnrichAction:\n      parameters:\n        enrichments:\n          smokeEnrichment: smoke enrichment value\n      requiresDomains:\n      - binary\n      type: org.deltafi.passthrough.action.RoteEnrichAction\n  flowPlan: smoke\n  formatActions:\n    SmokeFormatAction:\n      requiresDomains:\n      - binary\n      requiresEnrichment:\n      - smokeEnrichment\n      type: org.deltafi.passthrough.action.RoteFormatAction\n  ingressFlows:\n    smoke.ingressFlow:\n      loadAction: SmokeLoadAction\n      transformActions:\n      - SmokeTransformAction\n      type: binary\n  loadActions:\n    SmokeLoadAction:\n      consumes: binary\n      parameters:\n        domains:\n        - binary\n      type: org.deltafi.passthrough.action.RoteLoadAction\n  transformActions:\n    SmokeTransformAction:\n      consumes: binary\n      parameters:\n        resultType: binary\n      produces: binary\n      type: org.deltafi.passthrough.action.RoteTransformAction\n  validateActions:\n    SmokeValidateAction:\n      type: org.deltafi.passthrough.action.RubberStampValidateAction\npassthrough:\n  egressActions:\n    PassthroughEgressAction:\n      parameters:\n        egressFlow: egressFlow\n      type: org.deltafi.core.action.FilterEgressAction\n  egressFlows:\n    passthrough.egressFlow:\n      egressAction: PassthroughEgressAction\n      formatAction: PassthroughFormatAction\n      validateActions:\n      - PassthroughValidateAction\n  flowPlan: passthrough\n  formatActions:\n    PassthroughFormatAction:\n      requiresDomains:\n      - binary\n      type: org.deltafi.passthrough.action.RoteFormatAction\n  ingressFlows:\n    passthrough.ingressFlow:\n      loadAction: PassthroughLoadAction\n      transformActions:\n      - PassthroughTransformAction\n      type: binary\n  loadActions:\n    PassthroughLoadAction:\n      consumes: passthrough-binary\n      parameters:\n        domains:\n        - binary\n      type: org.deltafi.passthrough.action.RoteLoadAction\n  transformActions:\n    PassthroughTransformAction:\n      consumes: binary\n      parameters:\n        resultType: passthrough-binary\n      produces: passthrough-binary\n      type: org.deltafi.passthrough.action.RoteTransformAction\n  validateActions:\n    PassthroughValidateAction:\n      type: org.deltafi.passthrough.action.RubberStampValidateAction\nerror:\n  egressActions:\n    ErrorEgressAction:\n      parameters:\n        egressFlow: egress\n        metadataKey: deltafiMetadata\n        url: http://deltafi-egress-sink-service\n      type: org.deltafi.core.action.RestPostEgressAction\n  egressFlows:\n    error.egress:\n      egressAction: ErrorEgressAction\n      formatAction: ErrorFormatAction\n  flowPlan: error\n  formatActions:\n    ErrorFormatAction:\n      requiresDomains:\n      - error\n      type: org.deltafi.core.action.SimpleErrorFormatAction\n"
}