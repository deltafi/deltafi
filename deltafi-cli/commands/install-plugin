#!/usr/bin/env bash

. "$DELTAFICLI_WORKDIR/common"

cli_help_command() {
  echo "
Command: install-plugin

Usage:
  install-plugin [image] [OPTIONS]

Options:
  -h, --help           Show help
  -s, --pull-secret    Pull secret to use instead of using the pluginImagePullSecret system property"

  exit 1
}

TMPFILE="/tmp/.deltafi-install-plugin.$$"

cleanup() {
  rm -f $TMPFILE
  exit
}

trap cleanup INT

PULL_SECRET=
POSITIONAL=()
while [[ $# -gt 0 ]]; do
  key="$1"
  case $key in
    -s|--pull-secret)
      shift
      PULL_SECRET="$1"
      shift
      ;;
    -h|--help)
      cli_help_command
      shift # past argument
      ;;
    *)
      POSITIONAL+=("$1")
      shift
      ;;
  esac
done
set -- "${POSITIONAL[@]}"
ARGS=($@)
[[ " ${ARGS[@]} " =~ " --help " ]] && cli_help_command
[[ ${#ARGS[@]} -lt 2 ]] && cli_help_command

IMAGE="$2"

if [[ -z "$IMAGE" ]]; then
  cli_log "${red}The image must be provided${normal}"
  exit
fi

EXTRACT_PATH=".data.installPlugin"
QUERY="mutation {
         installPlugin(
           image: \"${IMAGE}\"
           imagePullSecret: \"${PULL_SECRET}\"
         ) {
           success
           info
           errors
         }
       }"

DELTAFI_DGS=$(_graphql)
QUERY=$(echo $QUERY | sed 's/"/\\"/g')
POST_QUERY="{ \"query\": \"$QUERY\"}"

truncate -s 0 ${TMPFILE}
RESPONSE_CODE=$(curl -s -X POST -o ${TMPFILE} -w "%{http_code}" -H "Content-Type: application/json" -H "$PERMISSION" -H "$CLI_USER" -d "$POST_QUERY" "$DELTAFI_DGS")

if [[ "$RESPONSE_CODE" != "200" ]]; then
  cli_log "${red}Installing "$IMAGE" failed${normal}"
  echo -e "${red}${RESPONSE_CODE} Error: $(cat ${TMPFILE})${normal}"
  exit 1
else
  ERRORS=$(cat ${TMPFILE} | jq -r "select(.errors) | .errors[] | .message")
  if [[ "$ERRORS" != "" ]]; then
    cli_log "${red}Installing $IMAGE failed${normal}"
    echo -e "${red}Error: ${ERRORS}${normal}"
    exit 1
  else
    SUCCESS=$(cat ${TMPFILE} | jq -r "${EXTRACT_PATH}.success")
    if [[ $SUCCESS == "true" ]]; then
      cli_log "${green}Plugin ${bold}$IMAGE${normal}${green} was successfully installed${normal}"
    else
      ERRORS=$(cat ${TMPFILE} | jq -r "${EXTRACT_PATH}.errors | join(\"\n\")")
      cli_log "${red}Installing $IMAGE failed:"
      echo -e "${red}$ERRORS${normal}"
      exit 1
    fi
  fi
fi
