#!/usr/bin/env bash

. "$DELTAFICLI_WORKDIR/common"

cli_help_command() {
  echo "
Command: install-plugin

Usage:
  install-plugin PLUGIN_DIRECTORY [OPTIONS] [helm flags]

Options:
  -h, --help        Show help
  -v, --verbose     Verbose output"
  exit 1
}

TMP_SOURCE_PLUGIN_FILE="/tmp/.deltafi-source-plugin.$$"

cleanup() {
  rm -f $TMP_SOURCE_PLUGIN_FILE
  exit
}

trap cleanup INT

VERBOSE=false

POSITIONAL=()
while [[ $# -gt 0 ]]; do
  key="$1"
  case $key in
    -v|--verbose)
      VERBOSE=true
      shift
      ;;
    *)
      POSITIONAL+=("$1")
      shift
      ;;
  esac
done
set -- "${POSITIONAL[@]}"
ARGS=($@)
[[ " ${ARGS[@]} " =~ " --help " ]] && cli_help_command
[[ ${#ARGS[@]} -lt 2 ]] && cli_help_command

PLUGIN_DIRECTORY=${ARGS[1]}
if [ ! -d "$PLUGIN_DIRECTORY" ]; then
  cli_log "${red}$PLUGIN_DIRECTORY: Plugin directory not found${normal}"
  exit 1
fi
PLUGIN_DIRECTORY=$(cd $PLUGIN_DIRECTORY && pwd)

CHARTS_DIRECTORY="$PLUGIN_DIRECTORY/charts"
if [ ! -d "$CHARTS_DIRECTORY" ]; then
  cli_log "${red}$PLUGIN_DIRECTORY: Plugin directory does not include a ${bold}charts${normal}${red} subdirectory${normal}"
  exit 1
fi

CHART_YAML="$CHARTS_DIRECTORY/Chart.yaml"
if [ ! -f "$CHART_YAML" ]; then
  cli_log "${red}$PLUGIN_DIRECTORY: Plugin missing ${bold}charts/Chart.yaml${normal}"
  exit 1
fi

PLUGIN_NAME="$(grep -e '^name:' ${CHART_YAML} | awk '{print $2}')"

cli_log "${bold}$PLUGIN_NAME${normal}: Registering plugin manifest"
PLUGIN_MANIFEST="$CHARTS_DIRECTORY/files/plugin.json"
if [ ! -f "$PLUGIN_MANIFEST" ]; then
  cli_log "${red}$PLUGIN_DIRECTORY: Plugin manifest (plugin.json) not found in ${bold}.plugin${normal}${red} subdirectory. Make sure the project uses the generate-plugin-manifest gradle plugin.${normal}"
  exit 1
fi

cli_log "${bold}$PLUGIN_NAME${normal}: Installing plugin"
helm upgrade --install --wait \
  --values $CHARTS_DIRECTORY/values.yaml \
  --namespace $DELTAFICLI_K8S_NAMESPACE $PLUGIN_NAME $CHARTS_DIRECTORY \
  --create-namespace ${ARGS[@]:2}

HELM_RETURN_CODE=$?
[[ "$HELM_RETURN_CODE" != "0" ]] && exit $HELM_RETURN_CODE

FLOWS_DIRECTORY="$PLUGIN_DIRECTORY/flows"
if [ ! -d "$FLOWS_DIRECTORY" ]; then
  cli_log "${yellow}$PLUGIN_NAME: Plugin directory does not include a ${bold}flows${normal}${yellow} subdirectory${normal}"
else
  deltafi load-plans "$PLUGIN_DIRECTORY"
fi

cli_log "${bold}$PLUGIN_NAME${normal}: Plugin install complete."
cleanup
