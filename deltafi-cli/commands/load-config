#!/usr/bin/env bash

. "$DELTAFICLI_WORKDIR/common"

cli_help_command() {
  echo "
Command: load-config

Usage:
  load-config <config-file.yaml>

Options:
  -r, --replace  Replace running config with the given config. Without this flag the given config will be merged with the running config.
  -h, --help     Show help"
  exit 1
}

MUTATION="mergeConfig"
POSITIONAL=()
while [[ $# -gt 0 ]]; do
  key="$1"

  case $key in
    -r|--replace)
      MUTATION="replaceConfig"
      shift # past argument
      ;;
    -h|--help)
      cli_help_command
      shift # past argument
      ;;
    *)    # unknown option
      POSITIONAL+=("$1") # save it in an array for later
      shift # past argument
      ;;
  esac
done

set -- "${POSITIONAL[@]}" # restore positional parameters
ARGS=($@)
[[ " ${ARGS[@]} " =~ " --help " ]] && cli_help_command
[[ ${#ARGS[@]} -lt 2 ]] && cli_help_command
FILE=${ARGS[@]:1}

if [ ! -f "$FILE" ]; then
  cli_log "${yellow}${FILE}: No such file${normal}"
  exit 1
fi

JSON=$(cat "$FILE" | ruby -rjson -e 'puts Hash["config" => ARGF.read].to_json')

QUERY="mutation(\$config: String!) {${MUTATION}(configYaml: \$config)}"
DELTAFI_DGS=$(deltafi serviceip deltafi-core-domain-service)
POST_QUERY="{ \"query\": \"$QUERY\",\"variables\":$JSON}"

curl -s -X POST -H "Content-Type: application/json" -d "$POST_QUERY" http://$DELTAFI_DGS/graphql | jq ".data.${MUTATION}" | ruby -ryaml -e 'puts YAML.safe_load(ARGF.read).to_yaml'
