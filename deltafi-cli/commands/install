#!/usr/bin/env bash

. "$DELTAFICLI_WORKDIR/common"

cli_help_command() {
  echo "
Command: install

Usage:
  install [OPTIONS] [helm flags]

Options:
  -h, --help        Show help"
  exit 1
}

load_plan() {
  if [[ ! "${1}" =~ "variables.json" ]]; then
    deltafi load-plan $1
  fi
}

load_policies() {
  if [[ ! "${1}" =~ "default.json" ]]; then
    deltafi load-policies $1
  fi
}

POSITIONAL=()
while [[ $# -gt 0 ]]; do
  key="$1"
  case $key in
    *)
      POSITIONAL+=("$1")
      shift
      ;;
  esac
done
set -- "${POSITIONAL[@]}"

ARGS=($@)
[[ " ${ARGS[@]} " =~ " --help " ]] && cli_help_command

if [[ ! -f "${DELTAFICLI_CHART_PATH}/Chart.lock" ]]; then
  cli_log "Executing helm dependencies"
  cd $DELTAFICLI_CHART_PATH
  helm dependencies build
  cd - > /dev/null
fi

cli_log "Installing DeltaFi"
helm upgrade --install --wait \
  --values $DELTAFICLI_CHART_PATH/values.yaml \
  --namespace $DELTAFICLI_K8S_NAMESPACE $DELTAFICLI_PROJECT_NAME $DELTAFICLI_CHART_PATH \
  --create-namespace --timeout 10m ${ARGS[@]:1}

HELM_RETURN_CODE=$?
[[ "$HELM_RETURN_CODE" != "0" ]] && exit $HELM_RETURN_CODE

FLOWS_DIRECTORY="${DELTAFI_DIR}/flows"
if [ ! -d "$FLOWS_DIRECTORY" ]; then
  cli_log "${yellow}Deltafi directory does not include a ${bold}flows${normal}${yellow} subdirectory${normal}"
else
  cli_log "Loading core flow plans"
  export -f load_plan
  if [[ -f $FLOWS_DIRECTORY/variables.json ]]; then
    deltafi load-variables "${FLOWS_DIRECTORY}/variables.json"
  fi
  find $FLOWS_DIRECTORY -name "*.json" -exec bash -c "load_plan \"{}\"" \;
fi

POLICIES_DIRECTORY="${DELTAFI_DIR}/policies"
if [ ! -d "$POLICIES_DIRECTORY" ]; then
  cli_log "${yellow}Deltafi directory does not include a ${bold}policies${normal}${yellow} subdirectory${normal}"
else
  cli_log "Loading delete policies"
  export -f load_policies
  if [[ -f $POLICIES_DIRECTORY/default.json ]]; then
    deltafi load-policies -r "${POLICIES_DIRECTORY}/default.json"
  fi
  find $POLICIES_DIRECTORY -name "*.json" -exec bash -c "load_policies \"{}\"" \;
fi

cli_log "DeltaFi install complete"
