#!/usr/bin/env bash

. "$DELTAFICLI_WORKDIR/common"

cli_help_command() {
  echo "
Command: run-integration-test

Run an integration test that was previously loaded

Usage:
  run-integration-test TESTNAME

Options:
  -h, --help        Show help
  -q, --quiet       Suppress detailed error messages"
  exit 1
}

TMPFILE="/tmp/.deltafi-run-integration-test.$$"

cleanup() {
  rm -f $TMPFILE
  exit
}

trap cleanup INT

SHOWERRORS=1
POSITIONAL=()
while [[ $# -gt 0 ]]; do
  key="$1"

  case $key in
    -h|--help)
      cli_help_command
      shift # past argument
      ;;
    -q|--quiet)
      SHOWERRORS=0
      shift # past argument
      ;;
    *)    # unknown option
      POSITIONAL+=("$1") # save it in an array for later
      shift # past argument
      ;;
  esac
done

set -- "${POSITIONAL[@]}" # restore positional parameters
ARGS=("$@")
[[ " ${ARGS[@]} " =~ " --help " ]] && cli_help_command
[[ ${#ARGS[@]} -lt 2 ]] && cli_help_command
TESTNAME=${ARGS[1]}

VARIABLES="{\"name\": \"$TESTNAME\"}"

QUERY="mutation (\$name: String!) { startIntegrationTest(name: \$name) { id status errors } }"

DELTAFI_DGS=$(_graphql)
POST_QUERY="{ \"query\": \"$QUERY\",\"variables\":$VARIABLES}"

truncate -s 0 ${TMPFILE}
RESPONSE_CODE=$(curl -s -X POST -o ${TMPFILE} -w "%{http_code}" -H "Content-Type: application/json" -H "$PERMISSION" -H "$CLI_USER" -d "$POST_QUERY" "$DELTAFI_DGS")

if [[ "$RESPONSE_CODE" != "200" ]]; then
  cli_log "${red}${TESTNAME}: Starting test failed${normal}"
  echo -e "${red}${RESPONSE_CODE} Error: $(cat ${TMPFILE})${normal}"
else
  ERRORS=$(cat ${TMPFILE} | jq -r "select(.errors) | .errors[] | .message")
  if [[ "$ERRORS" != "" ]]; then
    cli_log "${red}${TESTNAME}: Starting test failed${normal}"
    echo -e "${red}Error: ${ERRORS}${normal}"
  else
    SUCCESS=$(cat ${TMPFILE} | jq -r '.data.startIntegrationTest.status')
    if [[ $SUCCESS == "STARTED" ]]; then
      TESTID=$(cat ${TMPFILE} | jq -r '.data.startIntegrationTest.id')
      cli_log "Started test: ${TESTID}"
    else
      ERRORS=$(cat ${TMPFILE} | jq -r '.data.startIntegrationTest.errors | join(",")')
      cli_log "${red}${TESTNAME}: Test failure from ${TESTNAME}${normal}"
      if [[ $SHOWERRORS == "1" ]]; then
        echo -e "${red}${ERRORS}${normal}"
      fi
    fi
  fi
fi

cleanup
