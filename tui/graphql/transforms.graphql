#
#    DeltaFi - Data transformation and enrichment platform
#
#    Copyright 2021-2025 DeltaFi Contributors <deltafi@deltafi.org>
#
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
#

fragment TransformFlowFields on TransformFlow {
    name
    type
    description
    subscribe {
        topic
        condition
    }
    flowStatus {
        state
        errors {
            configName
            errorType
            message
        }
    }
    transformActions {
        name
        actionType
        type
        parameters
        join {
            maxAge
            minNum
            maxNum
            metadataKey
        }
    }
    publish {
        matchingPolicy
        defaultRule {
            defaultBehavior
            topic
        }
        rules {
            topic
            condition
        }
    }
}

mutation SaveTransform($input:TransformFlowPlanInput!) {
    saveTransformFlowPlan(transformFlowPlan:$input) {
        ...TransformFlowFields
    }
}

query ValidateTransform($name: String!) {
    validateTransformFlow(flowName: $name) {
        ...TransformFlowFields
    }
}

query GetTransform($name: String!) {
    getTransformFlow(flowName:$name) {
        ...TransformFlowFields
    }
}

query ListTransforms {
    getAllFlows {
        transform {
            name
            flowStatus {
                state
                testMode
            }
        }
    }
}

mutation EnableTransformTestMode($name: String!) {
    enableTransformTestMode(flowName: $name)
}

mutation DisableTransformTestMode($name: String!) {
    disableTransformTestMode(flowName: $name)
}

# Delete a transform flow
mutation DeleteTransform($name: String!) {
  removeTransformFlowPlan(name: $name)
}