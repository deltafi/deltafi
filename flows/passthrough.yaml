  ingressFlows:
    decompress-passthrough:
      loadAction: DecompressPassthroughLoadAction
      name: decompress-passthrough
      transformActions:
      - DecompressPassthroughTransformAction
      type: compressedBinary
    passthrough:
      loadAction: PassthroughLoadAction
      name: passthrough
      transformActions:
      - PassthroughTransformAction
      type: binary
  egressFlows:
    passthrough:
      egressAction: PassthroughEgressAction
      excludeIngressFlows: []
      formatAction: PassthroughFormatAction
      includeIngressFlows:
      - passthrough
      name: passthrough
      enrichActions: []
      validateActions:
      - PassthroughValidateAction
  transformActions:
    PassthroughTransformAction:
      consumes: binary
      parameters:
        resultType: passthrough-binary
      produces: passthrough-binary
      type: org.deltafi.passthrough.action.RoteTransformAction
    DecompressPassthroughTransformAction:
      consumes: compressedBinary
      parameters:
        decompressionType: auto
      produces: binary
      type: org.deltafi.core.action.DecompressionTransformAction
  loadActions:
    PassthroughLoadAction:
      consumes: passthrough-binary
      parameters:
        domains:
        - binary
      type: org.deltafi.passthrough.action.RoteLoadAction
    DecompressPassthroughLoadAction:
      consumes: binary
      parameters:
        reinjectFlow: passthrough
      type: org.deltafi.core.action.SplitterLoadAction
  enrichActions: {}
  formatActions:
    PassthroughFormatAction:
      requiresDomains:
      - binary
      requiresEnrichment: []
      type: org.deltafi.passthrough.action.RoteFormatAction
  validateActions:
    PassthroughValidateAction:
      type: org.deltafi.passthrough.action.RubberStampValidateAction
  egressActions:
    PassthroughEgressAction:
      parameters:
        egressFlow: passthrough
        metadataKey: deltafiMetadata
        url: http://deltafi-egress-sink-service
      type: org.deltafi.core.action.RestPostEgressAction
  deleteActions: {}
