{{- if .Values.kibana.load_saved_objects }}
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{.Release.Name}}-kibana-load-saved-objects-job"
  labels:
    app.kubernetes.io/managed-by: {{.Release.Service | quote }}
    app.kubernetes.io/instance: {{.Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{.Chart.Name}}-{{.Chart.Version}}"
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    spec:
      volumes:
      - name: "saved-objects"
        configMap:
          name: "{{.Release.Name}}-kibana-saved-objects"
          defaultMode: 0444
      containers:
      - name: load-kibana-saved-objects
        image: "{{ .Values.kibana.image }}:{{ .Values.kibana.imageTag }}"
        imagePullPolicy: IfNotPresent
        command:
        - /bin/sh
        - -c
        - |
          TIMEOUT=10
          RETRY_INTERVAL=20
          RETRY_COUNT=10
          function log {
            timestamp=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
            echo "$timestamp $1"
          }
          function load_data {
            log "Connecting to Elasticsearch..."
            curl -X POST --connect-timeout ${TIMEOUT} -H 'kbn-xsrf: true' --form file=@/tmp/import.ndjson http://{{.Release.Name}}-kibana:5601/api/saved_objects/_import?overwrite=true
          }

          n=0
          until [ "$n" -ge "${RETRY_COUNT}" ]; do
            load_data && exit 0
            n=$((n+1))
            log "Connection timed out. Will retry in ${RETRY_INTERVAL} seconds."
            sleep ${RETRY_INTERVAL}
          done
          log "Failed to connect to Elasticsearch."
          exit 1
        volumeMounts:
        - name: "saved-objects"
          mountPath: /tmp/import.ndjson
          subPath: import.ndjson
      restartPolicy: OnFailure
  backoffLimit: 20
{{- end }}
