plugins {
    id 'io.quarkus'
    id "com.palantir.docker" version "${palantirDockerVersion}"
    id 'org.kordamp.gradle.jandex' version '0.11.0'
}

dependencies {
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")

    implementation(platform("com.netflix.graphql.dgs:graphql-dgs-platform-dependencies:${dgsVersion}")) {
        because 'DGS BOM to automatically define versions of other packages below'
    }

    implementation project(':deltafi-common')
    implementation project(':deltafi-action-kit')
    implementation project(':deltafi-core-domain')

    implementation "redis.clients:jedis:${jedisVersion}"

    implementation "io.minio:minio:${minioVersion}"

    implementation "io.quarkus:quarkus-arc"
    implementation "io.quarkus:quarkus-config-yaml"
    implementation "io.quarkus:quarkus-jackson"
    implementation "io.quarkus:quarkus-kotlin"
    implementation "io.quarkus:quarkus-resteasy-reactive"
    implementation "io.quarkus:quarkus-resteasy-reactive-jackson"
    implementation 'io.quarkus:quarkus-spring-cloud-config-client'
    implementation 'io.quarkus:quarkus-spring-boot-properties'
    implementation "io.quarkiverse.loggingjson:quarkus-logging-json:${quarkusLoggingJsonVersion}"

    implementation "com.netflix.graphql.dgs:graphql-dgs-client"
    implementation "com.netflix.graphql.dgs.codegen:graphql-dgs-codegen-client-core:${dgsCodegenVersion}"

    implementation "com.github.victools:jsonschema-generator:${jsonschemaGeneratorVersion}"
    implementation "com.github.victools:jsonschema-module-jackson:${jsonschemaGeneratorVersion}"
    implementation "org.apache.commons:commons-compress:1.21"
    implementation "commons-io:commons-io:2.11.0"
    implementation "org.tukaani:xz:1.9"
    implementation "org.apache.nifi:nifi-flowfile-packager:1.16.0"

    testImplementation "io.quarkus:quarkus-junit5"
    testImplementation "io.quarkus:quarkus-junit5-mockito"
    testImplementation "io.rest-assured:rest-assured"
    testImplementation "org.mockito:mockito-junit-jupiter"
    testImplementation "com.fasterxml.jackson.dataformat:jackson-dataformat-xml"
    testImplementation "com.fasterxml.jackson.core:jackson-databind"

    testImplementation project(':deltafi-common-test')
    testImplementation "org.testcontainers:testcontainers:1.16.3"
}

task copyProbe(type: Copy) {
    from ('.')
    include "probe.sh"
    destinationDir file('build/docker')
}

dockerPrepare {
    dependsOn compileJava
    dependsOn assemble
    finalizedBy copyProbe
}

docker {
    name "${project.name}:${project.version}"
    copySpec.from("build/quarkus-app/").into("build/quarkus-app/")
}
