{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [
            "DeltaFi"
          ],
          "type": "dashboard"
        },
        "type": "dashboard"
      },
      {
        "datasource": {
          "type": "datasource",
          "uid": "grafana"
        },
        "enable": true,
        "hide": false,
        "iconColor": "orange",
        "name": "Global events",
        "target": {
          "fromAnnotations": true,
          "limit": 200,
          "matchAny": true,
          "queryType": "annotations",
          "tags": [
            "Global",
            "DeltaFi"
          ],
          "type": "tags"
        }
      }
    ]
  },
  "description": "Filter analysis by data source and annotation",
  "editable": false,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 1,
  "id": 3,
  "links": [],
  "panels": [
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 130,
      "panels": [],
      "title": "File Trends",
      "type": "row"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${database}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMin": 0,
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 25,
            "gradientMode": "opacity",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "smooth",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "linearThreshold": 2,
              "log": 10,
              "type": "symlog"
            },
            "showPoints": "never",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 5,
        "w": 18,
        "x": 0,
        "y": 1
      },
      "id": 147,
      "interval": "5m",
      "maxDataPoints": 100,
      "options": {
        "legend": {
          "calcs": [
            "sum"
          ],
          "displayMode": "table",
          "placement": "right",
          "showLegend": false,
          "sortBy": "Total",
          "sortDesc": true
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "multi",
          "sort": "desc"
        }
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${database}"
          },
          "editorMode": "code",
          "format": "time_series",
          "rawQuery": true,
          "rawSql": "SELECT\n  time_bucket_gapfill(($__interval_ms || ' ms')::interval, bucket_time) AS time,\n  COALESCE(SUM(filter_files), 0) AS filter_files\nFROM get_errors_filters_data(\n  $annotationKey,\n  ARRAY[$annotationValues],\n  ARRAY[$dataSources],\n  ARRAY[$groups],\n  $__timeFrom(),\n  $__timeTo(),\n  ($__interval_ms || ' ms'),\n  'FILTERS'\n)\nWHERE bucket_time >= $__timeFrom()\nAND bucket_time <= $__timeTo()\nGROUP BY time\nORDER BY time",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [
                  {
                    "name": "\"timestamp\"",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              },
              {
                "parameters": [
                  {
                    "name": "data_source",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "name": "data_source",
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "ts_egresses"
        }
      ],
      "title": "Filtered Files",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Dashboard --"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "displayName": "Filtered",
          "mappings": [
            {
              "options": {
                "null": {
                  "color": "green",
                  "index": 0,
                  "text": "0"
                }
              },
              "type": "value"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "yellow",
                "value": 1
              },
              {
                "color": "orange",
                "value": 2
              },
              {
                "color": "red",
                "value": 3
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 5,
        "w": 6,
        "x": 18,
        "y": 1
      },
      "id": 145,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "sum"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "value_and_name",
        "wideLayout": false
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Dashboard --"
          },
          "panelId": 147,
          "refId": "A",
          "withTransforms": false
        }
      ],
      "title": "",
      "transformations": [
        {
          "id": "reduce",
          "options": {
            "reducers": [
              "sum"
            ]
          }
        }
      ],
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${database}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "left",
            "axisSoftMin": 0,
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 25,
            "gradientMode": "opacity",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "smooth",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "linearThreshold": 2,
              "log": 10,
              "type": "symlog"
            },
            "showPoints": "never",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 24,
        "x": 0,
        "y": 6
      },
      "id": 142,
      "interval": "10s",
      "maxDataPoints": 100,
      "options": {
        "legend": {
          "calcs": [
            "sum"
          ],
          "displayMode": "table",
          "placement": "right",
          "showLegend": true,
          "sortBy": "Total",
          "sortDesc": true,
          "width": 500
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "multi",
          "sort": "desc"
        }
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${database}"
          },
          "editorMode": "code",
          "format": "time_series",
          "rawQuery": true,
          "rawSql": "SELECT\n  time_bucket_gapfill(($__interval_ms || ' ms')::interval, bucket_time) AS time,\n  annotation_value,\n  COALESCE(SUM(filter_files), 0) AS filter_files\nFROM get_errors_filters_data(\n  $annotationKey,\n  ARRAY[$annotationValues],\n  ARRAY[$dataSources],\n  ARRAY[$groups],\n  $__timeFrom(),\n  $__timeTo(),\n  ($__interval_ms || ' ms'),\n  'FILTERS'\n)\nWHERE bucket_time >= $__timeFrom()\nAND bucket_time <= $__timeTo() \nGROUP BY time, annotation_value\nORDER BY time, annotation_value;",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [
                  {
                    "name": "\"timestamp\"",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              },
              {
                "parameters": [
                  {
                    "name": "data_source",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "name": "data_source",
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "ts_egresses"
        }
      ],
      "title": "Filtered Files By $annotationKey",
      "transformations": [
        {
          "id": "renameByRegex",
          "options": {
            "regex": "\\w* (.*)",
            "renamePattern": "$1"
          }
        }
      ],
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${database}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMin": 0,
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 25,
            "gradientMode": "opacity",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "smooth",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "linearThreshold": 2,
              "log": 10,
              "type": "symlog"
            },
            "showPoints": "never",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 24,
        "x": 0,
        "y": 15
      },
      "id": 148,
      "interval": "10s",
      "maxDataPoints": 100,
      "options": {
        "legend": {
          "calcs": [
            "sum"
          ],
          "displayMode": "table",
          "placement": "right",
          "showLegend": true,
          "sortBy": "Total",
          "sortDesc": true,
          "width": 500
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "multi",
          "sort": "desc"
        }
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${database}"
          },
          "editorMode": "code",
          "format": "time_series",
          "rawQuery": true,
          "rawSql": "SELECT\n  time_bucket_gapfill(($__interval_ms || ' ms')::interval, bucket_time) AS time,\n  datasource_name AS data_source,\n  COALESCE(SUM(filter_files), 0) AS filter_files\nFROM get_errors_filters_data(\n  $annotationKey,\n  ARRAY[$annotationValues],\n  ARRAY[$dataSources],\n  ARRAY[$groups],\n  $__timeFrom(),\n  $__timeTo(),\n  ($__interval_ms || ' ms'),\n  'FILTERS'\n)\nWHERE bucket_time >= $__timeFrom()\nAND bucket_time <= $__timeTo() \nGROUP BY time, datasource_name\nORDER BY time, data_source;",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [
                  {
                    "name": "\"timestamp\"",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              },
              {
                "parameters": [
                  {
                    "name": "data_source",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "name": "data_source",
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "ts_egresses"
        }
      ],
      "title": "Filtered Files by Data Source",
      "transformations": [
        {
          "id": "renameByRegex",
          "options": {
            "regex": "\\w* (.*)",
            "renamePattern": "$1"
          }
        }
      ],
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${database}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMin": 0,
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 25,
            "gradientMode": "opacity",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "smooth",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "linearThreshold": 2,
              "log": 10,
              "type": "symlog"
            },
            "showPoints": "never",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 24,
        "x": 0,
        "y": 24
      },
      "id": 150,
      "interval": "10s",
      "maxDataPoints": 100,
      "options": {
        "legend": {
          "calcs": [
            "sum"
          ],
          "displayMode": "table",
          "placement": "right",
          "showLegend": true,
          "sortBy": "Total",
          "sortDesc": true,
          "width": 500
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "multi",
          "sort": "desc"
        }
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${database}"
          },
          "editorMode": "code",
          "format": "time_series",
          "rawQuery": true,
          "rawSql": "SELECT\n  time_bucket_gapfill(($__interval_ms || ' ms')::interval, bucket_time) AS time,\n  cause,\n  COALESCE(SUM(filter_files), 0) AS filter_files\nFROM get_errors_filters_data(\n  $annotationKey,\n  ARRAY[$annotationValues],\n  ARRAY[$dataSources],\n  ARRAY[$groups],\n  $__timeFrom(),\n  $__timeTo(),\n  ($__interval_ms || ' ms'),\n  'FILTERS'\n)\nWHERE bucket_time >= $__timeFrom()\nAND bucket_time <= $__timeTo() \nGROUP BY time, cause\nORDER BY time, cause;",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [
                  {
                    "name": "\"timestamp\"",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              },
              {
                "parameters": [
                  {
                    "name": "data_source",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "name": "data_source",
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "ts_egresses"
        }
      ],
      "title": "Filtered Files By Cause",
      "transformations": [
        {
          "id": "renameByRegex",
          "options": {
            "regex": "\\w* (.*)",
            "renamePattern": "$1"
          }
        }
      ],
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${database}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMin": 0,
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 25,
            "gradientMode": "opacity",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "smooth",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "linearThreshold": 2,
              "log": 10,
              "type": "symlog"
            },
            "showPoints": "never",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 24,
        "x": 0,
        "y": 33
      },
      "id": 156,
      "interval": "10s",
      "maxDataPoints": 100,
      "options": {
        "legend": {
          "calcs": [
            "sum"
          ],
          "displayMode": "table",
          "placement": "right",
          "showLegend": true,
          "sortBy": "Total",
          "sortDesc": true,
          "width": 500
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "multi",
          "sort": "desc"
        }
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${database}"
          },
          "editorMode": "code",
          "format": "time_series",
          "rawQuery": true,
          "rawSql": "SELECT\n  time_bucket_gapfill(($__interval_ms || ' ms')::interval, bucket_time) AS time,\n  group_name AS event_group,\n  COALESCE(SUM(filter_files), 0) AS filter_files\nFROM get_errors_filters_data(\n  $annotationKey,\n  ARRAY[$annotationValues],\n  ARRAY[$dataSources],\n  ARRAY[$groups],\n  $__timeFrom(),\n  $__timeTo(),\n  ($__interval_ms || ' ms'),\n  'FILTERS'\n)\nWHERE bucket_time >= $__timeFrom()\nAND bucket_time <= $__timeTo() \nGROUP BY time, group_name\nORDER BY time, event_group;",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [
                  {
                    "name": "\"timestamp\"",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              },
              {
                "parameters": [
                  {
                    "name": "data_source",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "name": "data_source",
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "ts_egresses"
        }
      ],
      "title": "Filtered Files By Group",
      "transformations": [
        {
          "id": "renameByRegex",
          "options": {
            "regex": "\\w* (.*)",
            "renamePattern": "$1"
          }
        }
      ],
      "transparent": true,
      "type": "timeseries"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 42
      },
      "id": 141,
      "panels": [],
      "title": "Summary",
      "type": "row"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${database}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "fixed"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "filterable": true,
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 14,
        "w": 12,
        "x": 0,
        "y": 43
      },
      "id": 154,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "enablePagination": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "frequency"
          }
        ]
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${database}"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT\n  datasource_name AS data_source,\n  cause,\n  COALESCE(SUM(filter_files), 0) AS frequency\nFROM get_errors_filters_data(\n  $annotationKey,\n  ARRAY[$annotationValues],\n  ARRAY[$dataSources],\n  ARRAY[$groups],\n  $__timeFrom(),\n  $__timeTo(),\n  '100 years',\n  'FILTERS'\n)\nGROUP BY datasource_name, cause\nORDER BY data_source, cause;",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "alias": "\"Data Source\"",
                "parameters": [
                  {
                    "name": "data_source",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              },
              {
                "name": "SUM",
                "parameters": [
                  {
                    "name": "ingress_bytes",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "name": "data_source",
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "ts_ingresses"
        }
      ],
      "title": "Cause frequency by Data Source",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "includeByName": {},
            "indexByName": {},
            "renameByName": {
              "annotation_value": "Annotation Value",
              "cause": "Cause",
              "causes": "Causes",
              "data_source": "Data Source",
              "egress_files": "Egress Files",
              "error_files": "Errored",
              "filter_files": "Filtered",
              "frequency": "Count",
              "ingress_files": "Ingress Files",
              "total_egress_bytes": "Egress Bytes",
              "total_ingress_bytes": "Ingress Bytes"
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${database}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "fixed"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "filterable": true,
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 14,
        "w": 12,
        "x": 12,
        "y": 43
      },
      "id": 157,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "enablePagination": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "frequency"
          }
        ]
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${database}"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT\n  group_name AS event_group,\n  cause,\n  COALESCE(SUM(filter_files), 0) AS frequency\nFROM get_errors_filters_data(\n  $annotationKey,\n  ARRAY[$annotationValues],\n  ARRAY[$dataSources],\n  ARRAY[$groups],\n  $__timeFrom(),\n  $__timeTo(),\n  '100 years',\n  'FILTERS'\n)\nGROUP BY group_name, cause\nORDER BY event_group, cause;",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "alias": "\"Data Source\"",
                "parameters": [
                  {
                    "name": "data_source",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              },
              {
                "name": "SUM",
                "parameters": [
                  {
                    "name": "ingress_bytes",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "name": "data_source",
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "ts_ingresses"
        }
      ],
      "title": "Cause frequency by Group",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "includeByName": {},
            "indexByName": {},
            "renameByName": {
              "annotation_value": "Annotation Value",
              "cause": "Cause",
              "causes": "Causes",
              "data_source": "Data Source",
              "egress_files": "Egress Files",
              "error_files": "Errored",
              "event_group": "Group",
              "filter_files": "Filtered",
              "frequency": "Count",
              "ingress_files": "Ingress Files",
              "total_egress_bytes": "Egress Bytes",
              "total_ingress_bytes": "Ingress Bytes"
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${database}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "fixed"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "filterable": true,
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 14,
        "w": 12,
        "x": 0,
        "y": 57
      },
      "id": 159,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "enablePagination": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "frequency"
          }
        ]
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${database}"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT\n  datasource_name AS data_source,\n  annotation_value,\n  COALESCE(SUM(filter_files), 0) AS frequency\nFROM get_errors_filters_data(\n  $annotationKey,\n  ARRAY[$annotationValues],\n  ARRAY[$dataSources],\n  ARRAY[$groups],\n  $__timeFrom(),\n  $__timeTo(),\n  '100 years',\n  'FILTERS'\n)\nGROUP BY datasource_name, annotation_value\nORDER BY data_source, annotation_value;",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "alias": "\"Data Source\"",
                "parameters": [
                  {
                    "name": "data_source",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              },
              {
                "name": "SUM",
                "parameters": [
                  {
                    "name": "ingress_bytes",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "name": "data_source",
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "ts_ingresses"
        }
      ],
      "title": "$annotationKey Value frequency by Data Source",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "includeByName": {},
            "indexByName": {},
            "renameByName": {
              "annotation_value": "Annotation Value",
              "cause": "Cause",
              "causes": "Causes",
              "data_source": "Data Source",
              "egress_files": "Egress Files",
              "error_files": "Errored",
              "filter_files": "Filtered",
              "frequency": "Count",
              "ingress_files": "Ingress Files",
              "total_egress_bytes": "Egress Bytes",
              "total_ingress_bytes": "Ingress Bytes"
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${database}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "fixed"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "filterable": true,
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 14,
        "w": 12,
        "x": 12,
        "y": 57
      },
      "id": 158,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "enablePagination": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "frequency"
          }
        ]
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${database}"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT\n  group_name AS event_group,\n  annotation_value,\n  COALESCE(SUM(filter_files), 0) AS frequency\nFROM get_errors_filters_data(\n  $annotationKey,\n  ARRAY[$annotationValues],\n  ARRAY[$dataSources],\n  ARRAY[$groups],\n  $__timeFrom(),\n  $__timeTo(),\n  '100 years',\n  'FILTERS'\n)\nGROUP BY group_name, annotation_value\nORDER BY event_group, annotation_value;",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "alias": "\"Data Source\"",
                "parameters": [
                  {
                    "name": "data_source",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              },
              {
                "name": "SUM",
                "parameters": [
                  {
                    "name": "ingress_bytes",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "name": "data_source",
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "ts_ingresses"
        }
      ],
      "title": "$annotationKey Value Filter Frequency by Group",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "includeByName": {},
            "indexByName": {},
            "renameByName": {
              "annotation_value": "Annotation Value",
              "causes": "Causes",
              "data_source": "Data Source",
              "egress_files": "Egress Files",
              "error_files": "Errored",
              "event_group": "Group",
              "filter_files": "Filtered",
              "frequency": "Count",
              "ingress_files": "Ingress Files",
              "total_egress_bytes": "Egress Bytes",
              "total_ingress_bytes": "Ingress Bytes"
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${database}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "fixed"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "filterable": true,
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 13,
        "w": 24,
        "x": 0,
        "y": 71
      },
      "id": 155,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "enablePagination": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "frequency"
          }
        ]
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${database}"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT\n  datasource_name AS flow_name,\n  action_name,\n  COALESCE(SUM(filter_files), 0) AS total_filters\nFROM get_errors_filters_data(\n  $annotationKey,\n  ARRAY[$annotationValues],\n  ARRAY[$dataSources],\n  ARRAY[$groups],\n  $__timeFrom(),\n  $__timeTo(),\n  '100 years',\n  'FILTERS'\n)\nGROUP BY datasource_name, action_name\nORDER BY flow_name, action_name;",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "alias": "\"Data Source\"",
                "parameters": [
                  {
                    "name": "data_source",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              },
              {
                "name": "SUM",
                "parameters": [
                  {
                    "name": "ingress_bytes",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "name": "data_source",
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "ts_ingresses"
        }
      ],
      "title": "Filter Frequency by Flow and Action",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "includeByName": {},
            "indexByName": {},
            "renameByName": {
              "action_name": "Action Name",
              "annotation_value": "Annotation Value",
              "causes": "Causes",
              "data_source": "Data Source",
              "egress_files": "Egress Files",
              "error_files": "Errored",
              "filter_files": "Filtered",
              "flow_name": "Flow Name",
              "flow_type": "Flow Type",
              "frequency": "Count",
              "ingress_files": "Ingress Files",
              "total_egress_bytes": "Egress Bytes",
              "total_filters": "Count",
              "total_ingress_bytes": "Ingress Bytes"
            }
          }
        }
      ],
      "type": "table"
    }
  ],
  "preload": false,
  "refresh": "",
  "schemaVersion": 40,
  "tags": [
    "DeltaFi",
    "Data Flow",
    "Analytics"
  ],
  "templating": {
    "list": [
      {
        "allValue": "'All'",
        "allowCustomValue": false,
        "current": {
          "text": "All",
          "value": [
            "$__all"
          ]
        },
        "datasource": {
          "type": "grafana-postgresql-datasource",
          "uid": "${database}"
        },
        "definition": "SELECT DISTINCT \n  fd.name AS __value,\n  fd.name AS __text\nFROM (\n    SELECT DISTINCT aa.data_source_id\n    FROM analytics_5m_anno aa \n    WHERE $__timeFilter(aa.bucket_start)\n    UNION\n    SELECT DISTINCT an.data_source_id\n    FROM analytics_5m_noanno an\n    WHERE $__timeFilter(an.bucket_start)\n) a\nJOIN flow_definitions fd\nON fd.id = a.data_source_id",
        "includeAll": true,
        "label": "Data Sources",
        "multi": true,
        "name": "dataSources",
        "options": [],
        "query": "SELECT DISTINCT \n  fd.name AS __value,\n  fd.name AS __text\nFROM (\n    SELECT DISTINCT aa.data_source_id\n    FROM analytics_5m_anno aa \n    WHERE $__timeFilter(aa.bucket_start)\n    UNION\n    SELECT DISTINCT an.data_source_id\n    FROM analytics_5m_noanno an\n    WHERE $__timeFilter(an.bucket_start)\n) a\nJOIN flow_definitions fd\nON fd.id = a.data_source_id",
        "refresh": 2,
        "regex": "",
        "sort": 5,
        "type": "query"
      },
      {
        "allValue": "'All'",
        "allowCustomValue": false,
        "current": {
          "text": "All",
          "value": [
            "$__all"
          ]
        },
        "datasource": {
          "type": "grafana-postgresql-datasource",
          "uid": "${database}"
        },
        "definition": "SELECT DISTINCT\n  eg.name AS __text,\n  eg.name AS __value \nFROM (\n  SELECT event_group_id, data_source_id, bucket_start\n  FROM analytics_5m_anno\n  UNION ALL\n  SELECT event_group_id, data_source_id, bucket_start\n  FROM analytics_5m_noanno\n) a\nJOIN flow_definitions fd ON a.data_source_id = fd.id\nJOIN event_groups eg ON a.event_group_id = eg.id\nWHERE $__timeFilter(a.bucket_start)\n  AND ('All' in ($dataSources) OR fd.name in ($dataSources));",
        "includeAll": true,
        "label": "Groups",
        "multi": true,
        "name": "groups",
        "options": [],
        "query": "SELECT DISTINCT\n  eg.name AS __text,\n  eg.name AS __value \nFROM (\n  SELECT event_group_id, data_source_id, bucket_start\n  FROM analytics_5m_anno\n  UNION ALL\n  SELECT event_group_id, data_source_id, bucket_start\n  FROM analytics_5m_noanno\n) a\nJOIN flow_definitions fd ON a.data_source_id = fd.id\nJOIN event_groups eg ON a.event_group_id = eg.id\nWHERE $__timeFilter(a.bucket_start)\n  AND ('All' in ($dataSources) OR fd.name in ($dataSources));",
        "refresh": 1,
        "regex": "",
        "sort": 5,
        "type": "query"
      },
      {
        "allValue": "'All'",
        "allowCustomValue": false,
        "current": {
          "text": "All",
          "value": "$__all"
        },
        "datasource": {
          "type": "grafana-postgresql-datasource",
          "uid": "${database}"
        },
        "definition": "SELECT DISTINCT\n  ak.key_name AS __text,\n  ak.key_name AS __value\nFROM analytics_5m_anno aa\nJOIN flow_definitions fd ON aa.data_source_id = fd.id\nJOIN event_groups eg ON aa.event_group_id = eg.id\nJOIN annotation_keys ak ON aa.annotation_key_id = ak.id\nWHERE $__timeFilter(aa.bucket_start)\n  AND ('All' IN ($dataSources) OR fd.name IN ($dataSources))\n  AND ('All' IN ($groups) OR eg.name IN ($groups))",
        "description": "",
        "includeAll": true,
        "label": "Annotation Key",
        "name": "annotationKey",
        "options": [],
        "query": "SELECT DISTINCT\n  ak.key_name AS __text,\n  ak.key_name AS __value\nFROM analytics_5m_anno aa\nJOIN flow_definitions fd ON aa.data_source_id = fd.id\nJOIN event_groups eg ON aa.event_group_id = eg.id\nJOIN annotation_keys ak ON aa.annotation_key_id = ak.id\nWHERE $__timeFilter(aa.bucket_start)\n  AND ('All' IN ($dataSources) OR fd.name IN ($dataSources))\n  AND ('All' IN ($groups) OR eg.name IN ($groups))",
        "refresh": 2,
        "regex": "",
        "sort": 5,
        "type": "query"
      },
      {
        "allValue": "'All'",
        "allowCustomValue": false,
        "current": {
          "text": [
            "All"
          ],
          "value": [
            "$__all"
          ]
        },
        "datasource": {
          "type": "grafana-postgresql-datasource",
          "uid": "${database}"
        },
        "definition": "SELECT DISTINCT\n  av.value_text AS __text,\n  av.value_text AS __value\nFROM analytics_5m_anno aa\nJOIN flow_definitions fd ON aa.data_source_id = fd.id\nJOIN event_groups eg ON aa.event_group_id = eg.id\nJOIN annotation_keys ak ON aa.annotation_key_id = ak.id\nJOIN annotation_values av ON aa.annotation_value_id = av.id\nWHERE $__timeFilter(aa.bucket_start)\n  AND ('All' IN ($dataSources) OR fd.name IN ($dataSources))\n  AND ('All' IN ($groups) OR eg.name IN ($groups))\n  AND ak.key_name = $annotationKey \n  AND $annotationKey != 'All'",
        "includeAll": true,
        "label": "Annotation Values",
        "multi": true,
        "name": "annotationValues",
        "options": [],
        "query": "SELECT DISTINCT\n  av.value_text AS __text,\n  av.value_text AS __value\nFROM analytics_5m_anno aa\nJOIN flow_definitions fd ON aa.data_source_id = fd.id\nJOIN event_groups eg ON aa.event_group_id = eg.id\nJOIN annotation_keys ak ON aa.annotation_key_id = ak.id\nJOIN annotation_values av ON aa.annotation_value_id = av.id\nWHERE $__timeFilter(aa.bucket_start)\n  AND ('All' IN ($dataSources) OR fd.name IN ($dataSources))\n  AND ('All' IN ($groups) OR eg.name IN ($groups))\n  AND ak.key_name = $annotationKey \n  AND $annotationKey != 'All'",
        "refresh": 2,
        "regex": "",
        "sort": 5,
        "type": "query"
      },
      {
        "current": {
          "text": "Postgres",
          "value": "deltafi-postgres"
        },
        "hide": 2,
        "includeAll": false,
        "label": "Database",
        "name": "database",
        "options": [],
        "query": "grafana-postgresql-datasource",
        "refresh": 1,
        "regex": "",
        "type": "datasource"
      }
    ]
  },
  "time": {
    "from": "now-24h",
    "to": "now"
  },
  "timepicker": {
    "refresh_intervals": [
      "30m",
      "1h",
      "2h",
      "1d"
    ]
  },
  "timezone": "",
  "title": "Filter Analysis",
  "uid": "filter-analysis",
  "version": 1,
  "weekStart": ""
}