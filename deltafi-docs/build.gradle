/**
 *    DeltaFi - Data transformation and enrichment platform
 *
 *    Copyright 2021-2023 DeltaFi Contributors <deltafi@deltafi.org>
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */
import com.hierynomus.gradle.license.tasks.LicenseCheck
import com.hierynomus.gradle.license.tasks.LicenseFormat

plugins {
    id 'idea'
    id "com.palantir.docker" version "${palantirDockerVersion}"
    id "com.github.hierynomus.license" version "${hierynomusLicenseVersion}"
}

license {
    header(rootProject.file('HEADER'))
    excludes(excludeFromLicense)
    strictCheck true
    mapping('java', 'SLASHSTAR_STYLE')
}

docker {
    name "${project.name}:${project.version}"
    copySpec.from(".").exclude("**/build").into(".")
    tag "local", "${localDockerRegistry}/${project.name}:latest"
}

task copyChangelog(type: Copy) {
    from('../CHANGELOG.md')
    into('public/docs')
}

docker.dependsOn assemble

assemble.dependsOn copyChangelog

task licenseLocal(type: LicenseCheck) {
    source = fileTree(dir: ".")
}
licenseLocal.dependsOn assemble

task licenseFormatLocal(type: LicenseFormat) {
    source = fileTree(dir: ".")
}
licenseFormat.dependsOn licenseFormatLocal
