plugins {
    id 'com.palantir.docker' version "${palantirDockerVersion}"
    id 'com.github.hierynomus.license' version "${hierynomusLicenseVersion}"
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.springframework.boot' version "${springBootVersion}"
}

description = 'DeltaFi Ingress'

license {
    header(rootProject.file('HEADER'))
    excludes(excludeFromLicense)
}

jar {
    // do not create the -plain.jar
    enabled = false
}

springBoot {
    buildInfo()
}

dependencies {
    implementation project(':deltafi-common')

    implementation 'com.squareup.okhttp3:okhttp:4.10.0'
    implementation 'org.apache.commons:commons-compress:1.21'
    implementation 'org.glassfish.jersey.core:jersey-common'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-config:3.1.3'

    testImplementation 'org.apache.nifi:nifi-flowfile-packager:1.16.2'
    testImplementation "org.springframework.boot:spring-boot-starter-test"
}

test {
    useJUnitPlatform()
}

task copyProbe(type: Copy) {
    from ('.')
    include "probe.sh"
    destinationDir file('build/docker')
}

dockerPrepare {
    dependsOn bootJar
    dependsOn compileJava
    dependsOn assemble
    finalizedBy copyProbe
}

docker {
    dependsOn dockerPrepare
    tag "local", "${localDockerRegistry}/${project.name}:latest"
    name "${project.name}:${project.version}"
    copySpec.from(bootJar.archiveFile).into("build/libs/")
}
