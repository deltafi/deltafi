pluginManagement {
    def carboniteRepoPath = "file:///${rootProject.projectDir}/${repoCarbonite}"
    repositories {
        if(file(carboniteRepoPath).exists()) {
            maven {
                url carboniteRepoPath
                metadataSources {
                    artifact()
                    gradleMetadata()
                }
            }
        }

        mavenCentral()
        gradlePluginPortal()
    }
    plugins {
        id "${quarkusPluginId}" version "${quarkusPluginVersion}"
    }
}

dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)

    def carboniteRepoPath = "file:///${rootProject.projectDir}/${repoCarbonite}"
    repositories {
        if(file(carboniteRepoPath).exists()) {
            maven {
                url carboniteRepoPath
                metadataSources {
                    artifact()
                    gradleMetadata()
                }
            }
        }

        mavenLocal()
        mavenCentral()
    }
}

rootProject.name='deltafi'

include 'deltafi-action-kit'
include 'deltafi-common'
include 'deltafi-core-domain'
include 'deltafi-core-actions'
include 'deltafi-passthrough-actions'
include 'deltafi-ingress'
include 'deltafi-gateway'
include 'deltafi-common-test'
