#
#    DeltaFi - Data transformation and enrichment platform
#
#    Copyright 2021-2023 DeltaFi Contributors <deltafi@deltafi.org>
#
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
#

enum TopicFilterPolicy {
    DROP
    FILTER
    ERROR
}

enum DefaultBehavior {
    ERROR
    FILTER
    PUBLISH
}

enum MatchingPolicy {
    ALL_MATCHING
    FIRST_MATCHING
}

input DefaultRuleInput {
    defaultBehavior: DefaultBehavior!
    topic: String
}

type DefaultRule {
    defaultBehavior: DefaultBehavior!
    topic: String
}

input RuleInput {
    topics: [String]!
    condition: String
}

type Rule {
    topics: [String]!
    condition: String
}

input PublishRulesInput {
    matchingPolicy: MatchingPolicy
    defaultRule: DefaultRuleInput
    rules: [RuleInput]!
}

type PublishRules {
    matchingPolicy: MatchingPolicy!
    defaultRule: DefaultRule!
    rules: [Rule]!
}

input TopicInput {
    name: String!
    filterPolicy: TopicFilterPolicy
    filters: [String]
}

type Topic {
    name: String!
    filterPolicy: TopicFilterPolicy!
    filters: [String]
}

extend type Query {
    getTopic(topic: String!): Topic
    getTopics: [Topic]!
}

extend type Mutation {
    saveTopic(topic: TopicInput!): Topic!
    deleteTopic(topic: String!): Boolean!
}