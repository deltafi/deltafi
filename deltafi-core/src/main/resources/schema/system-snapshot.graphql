#
#    DeltaFi - Data transformation and enrichment platform
#
#    Copyright 2022 DeltaFi Contributors <deltafi@deltafi.org>
#
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
#

type SystemSnapshot {
    id: String!
    reason: String
    created: DateTime!
    deletePolicies: DeletePolicies!
    flowAssignmentRules: [FlowAssignmentRule]!
    propertySets: [PropertySet]!
    installedPlugins: [PluginCoordinates]!
    pluginVariables: [PluginVariables]!
    runningIngressFlows: [String]!
    runningEnrichFlows: [String]!
    runningEgressFlows: [String]!
}

input SystemSnapshotInput {
    id: String!
    reason: String
    created: DateTime!
    deletePolicies: DeletePoliciesInput!
    flowAssignmentRules: [FlowAssignmentRuleInput]!
    propertySets: [PropertySetInput]!
    installedPlugins: [PluginCoordinatesInput]!
    pluginVariables: [PluginVariablesInput]!
    runningIngressFlows: [String]!
    runningEnrichFlows: [String]!
    runningEgressFlows: [String]!
}

extend type Query {
  getSystemSnapshots: [SystemSnapshot]!
  getSystemSnapshot(snapshotId: String!) : SystemSnapshot
}

extend type Mutation {
    # create and return a new system snapshot with an optional reason
    snapshotSystem(reason: String): SystemSnapshot!

    # apply the snapshot with the given SnapshotId, hardReset (default=false) indicates all custom config should be reset before applying the snapshot
    resetFromSnapshotWithId(snapshotId: String!, hardReset: Boolean) : Result!

    # import the given SystemSnapshot
    importSnapshot(snapshot: SystemSnapshotInput!) : SystemSnapshot!
}