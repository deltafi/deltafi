#
#    DeltaFi - Data transformation and enrichment platform
#
#    Copyright 2021-2025 DeltaFi Contributors <deltafi@deltafi.org>
#
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
#

type Fingerprints {
    certificate: String
    publicKey: String
}

type Certificate {
    # DNS/Domain info
    commonName: String!
    subjectAlternativeNames: [String!]!

    # Expiration tracking
    validFrom: DateTime!
    validTo: DateTime!
    daysUntilExpiration: Int
    isExpired: Boolean!
    isValid: Boolean!

    issuer: String!

    fingerprints: Fingerprints
    raw: String
}

type SslInfo {
    secretName: String!
    cert: Certificate
    key: String
    keyPassphrase: String
    usedBy: [String]!
}

type SslSettings {
    keys: [SslInfo]
    caChain: String
}

input KeyCertPairInput {
    key: String!
    cert: String!
    keyPassphrase: String
}

extend type Query {
    getKeyCert(secretName: String!) : SslInfo!
    sslSettings: SslSettings!
}

extend type Mutation {
    saveKeyCert(secretName: String!, keyCertPair: KeyCertPairInput!) : SslInfo!
    deleteKeyCert(secretName: String!) : SslInfo!
    appendToCaChain(certs: String!) : String!
    saveCaChain(certs: String!) : String!
}