#
#    DeltaFi - Data transformation and enrichment platform
#
#    Copyright 2021-2025 DeltaFi Contributors <deltafi@deltafi.org>
#
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
#

enum PropertySource {
    CUSTOM
    DEFAULT
}

enum LinkType {
    EXTERNAL
    DELTAFILE_LINK
}

type Property {
    key: String!                    # property key
    description: String!            # describe what this property does
    defaultValue: String            # value used if no value is set in git or db
    refreshable: Boolean!           # will apps automatically pick up changes to this property
    value: String                   # value as set in git/file-system or db
    propertySource: PropertySource! # where the property was set (external for git/filesystem or db)
}

input PropertyInput {
    key: String!                    # property key
    description: String!            # describe what this property does
    defaultValue: String            # value used if no value is set in git or db
    refreshable: Boolean!           # will apps automatically pick up changes to this property
    value: String                   # value as set in git/file-system or db
    propertySource: PropertySource  # not needed here but allows the Property class to be reused for input
}

type PropertySet {
    id: String!
    displayName: String!
    description: String!
    properties: [Property]!
}

input PropertySetInput {
    id: String!
    displayName: String!
    description: String!
    properties: [PropertyInput]!
}

type Link {
    id: UUID!
    name: String!
    url: String!
    description: String
    linkType: LinkType!
}

input LinkInput {
    id: UUID
    name: String!
    url: String!
    description: String
    linkType: LinkType
}

type DeltaFiProperties {
    systemName: String!
    requeueDuration: String!
    autoResumeCheckFrequency: String!
    coreServiceThreads: Int!
    coreInternalQueueSize: Int!
    scheduledServiceThreads: Int!
    metricsEnabled: Boolean!
    metricsErrorAnalyticsEnabled: Boolean!
    ageOffDays: Int!
    deleteFrequency: String!
    deletePolicyBatchSize: Int!
    cacheEnabled: Boolean!
    cacheSyncDuration: String!
    ingressEnabled: Boolean!
    ingressDiskSpaceRequirementInMb: Long!
    pluginImageRepositoryBase: String
    pluginImagePullSecret: String
    pluginAutoRollback: Boolean
    pluginDeployTimeout: String
    checkActionQueueSizeThreshold: Int!
    checkContentStoragePercentThreshold: Int!
    uiUseUTC: Boolean!
    topBarBackgroundColor: String
    topBarTextColor: String
    securityBannerText: String
    securityBannerBackgroundColor: String
    securityBannerTextColor: String
    securityBannerEnabled: Boolean!
    inMemoryQueueSize: Int!
    maxFlowDepth: Int!
    joinAcquireLockTimeoutMs: Long!
    joinMaxLockDuration: String!
    joinLockCheckInterval: String!
}

input DeltaFiPropertiesInput {
    systemName: String!
    requeueDuration: String!
    autoResumeCheckFrequency: String!
    coreServiceThreads: Int!
    coreInternalQueueSize: Int!
    scheduledServiceThreads: Int!
    metricsEnabled: Boolean!
    metricsErrorAnalyticsEnabled: Boolean!
    ageOffDays: Int!
    deleteFrequency: String!
    deletePolicyBatchSize: Int!
    cacheEnabled: Boolean!
    cacheSyncDuration: String!
    ingressEnabled: Boolean!
    ingressDiskSpaceRequirementInMb: Long!
    pluginImageRepositoryBase: String
    pluginImagePullSecret: String
    pluginAutoRollback: Boolean
    pluginDeployTimeout: String
    checkActionQueueSizeThreshold: Int!
    checkContentStoragePercentThreshold: Int!
    uiUseUTC: Boolean!
    topBarBackgroundColor: String
    topBarTextColor: String
    securityBannerText: String
    securityBannerBackgroundColor: String
    securityBannerTextColor: String
    securityBannerEnabled: Boolean!
    inMemoryQueueSize: Int!
    maxFlowDepth: Int!
    joinAcquireLockTimeoutMs: Long!
    joinMaxLockDuration: String!
    joinLockCheckInterval: String!
}

extend type Query {
    getPropertySets: [PropertySet]!
    getDeltaFiProperties: DeltaFiProperties!
}

extend type Mutation {
    updateProperties(updates: [KeyValueInput]!): Boolean!
    removePropertyOverrides(propertyNames: [String]!): Boolean!
    saveLink(link: LinkInput!): Link!
    removeLink(id: UUID!): Boolean!
}
