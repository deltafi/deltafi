plugins {
	id 'com.netflix.dgs.codegen' version "${dgsCodegenVersion}"
	id 'com.github.ben-manes.versions' version '0.38.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'org.springframework.boot' version '2.4.5'
	id "com.palantir.docker" version "${palantirDockerVersion}"
}

task renameJar (type: Copy) {
	from ('build/libs/')
	include "deltafi-core-domain-${project.version}.jar"
	destinationDir file('build/libs/')
	rename "deltafi-core-domain-${project.version}.jar", 'deltafi-core-domain.jar'
}

assemble.finalizedBy(renameJar)

jar {
	enabled = true
	archiveClassifier.set('api')
	include('org/deltafi/core/domain/api/**')
	include('org/deltafi/core/domain/generated/client/**')
	include('org/deltafi/core/domain/generated/types/**')
}

configurations {
	jars
}

artifacts {
	jars jar
}

generateJava {
    packageName = 'org.deltafi.core.domain.generated'
    generateClient = true
    typeMapping = [
	  "ActionSchema": "org.deltafi.core.domain.api.types.ActionSchema",
	  "DeltaFiles": "org.deltafi.core.domain.api.types.DeltaFiles",
	  "JSON": "org.deltafi.core.domain.api.types.JsonMap",
	  "Long": "java.lang.Long"
    ]
}

dependencyManagement {
	imports {
		mavenBom 'org.springframework.cloud:spring-cloud-dependencies:2020.0.3'
	}
}

dependencies {
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	implementation project(":deltafi-common")

	implementation "javax.inject:javax.inject:1"

	implementation "org.springframework.boot:spring-boot-starter-data-mongodb"
	implementation "org.springframework.boot:spring-boot-starter-aop"
	implementation "org.springframework.retry:spring-retry"
	implementation "org.springframework.cloud:spring-cloud-starter-config"

	implementation "redis.clients:jedis:${jedisVersion}"

	implementation "io.minio:minio:${minioVersion}"

	// Use DGS BOM to automatically define versions of other packages below
	implementation(platform("com.netflix.graphql.dgs:graphql-dgs-platform-dependencies:${dgsVersion}")) {
		because 'DGS BOM to automatically define versions of other packages below'
	}

	implementation "com.networknt:json-schema-validator:1.0.58"
	implementation "com.netflix.graphql.dgs:graphql-dgs-extended-scalars"
	implementation "com.netflix.graphql.dgs:graphql-dgs-spring-boot-starter"
	implementation "org.springframework.boot:spring-boot-starter-web"

	implementation "net.logstash.logback:logstash-logback-encoder:6.6"
	implementation "ch.qos.logback:logback-classic"

	testImplementation "org.springframework.boot:spring-boot-starter-test"
	testImplementation "de.flapdoodle.embed:de.flapdoodle.embed.mongo:2.2.0"

	testImplementation project(":deltafi-common-test")
	testImplementation 'org.awaitility:awaitility:4.1.0'
	testImplementation "org.testcontainers:testcontainers:1.16.0"
}

docker {
    dependsOn compileJava
    dependsOn build
    name "${project.name}:${project.version}"
    copySpec.from("build/libs/").into("build/libs/")
}
