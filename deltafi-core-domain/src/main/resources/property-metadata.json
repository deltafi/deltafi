[
  {
    "id": "deltafi-common",
    "displayName": "Common Properties",
    "description": "Properties used across all parts of the system.",
    "properties": [
      {
        "key": "quarkus.micrometer.export.graphite.enabled",
        "description": "Enable micrometer metrics export to Graphite",
        "defaultValue": true,
        "hidden": true,
        "refreshable": false,
        "editable": false
      },
      {
        "key": "quarkus.micrometer.export.graphite.default-registry",
        "description": "Micrometer metrics default export to Graphite",
        "defaultValue": true,
        "hidden": true,
        "refreshable": false,
        "editable": false
      },
      {
        "key": "quarkus.micrometer.export.graphite.graphiteTagsEnabled",
        "description": "Enable tagged metrics for Graphite",
        "defaultValue": true,
        "hidden": true,
        "refreshable": false,
        "editable": false
      },
      {
        "key": "quarkus.micrometer.export.graphite.host",
        "description": "Graphite host for micrometer metrics",
        "defaultValue": "deltafi-graphite",
        "hidden": true,
        "refreshable": false,
        "editable": false
      },
      {
        "key": "quarkus.micrometer.export.graphite.port",
        "description": "Graphite host port for micrometer metrics",
        "defaultValue": 2004,
        "hidden": true,
        "refreshable": false,
        "editable": false
      },
      {
        "key": "quarkus.micrometer.export.graphite.protocol",
        "description": "Graphite protocol used by micrometer metrics",
        "defaultValue": "PICKLED",
        "hidden": true,
        "refreshable": false,
        "editable": false
      },
      {
        "key": "quarkus.micrometer.export.graphite.publish",
        "description": "Micrometer publishing for Graphite enabled",
        "defaultValue": true,
        "hidden": true,
        "refreshable": false,
        "editable": false
      },
      {
        "key": "quarkus.micrometer.export.graphite.step",
        "description": "Publishing frequency for Graphite metrics",
        "defaultValue": "10s",
        "hidden": true,
        "refreshable": false,
        "editable": false
      },
      {
        "key": "spring.data.mongodb.host",
        "description": "Mongo server host. Cannot be set with URI.",
        "defaultValue": "deltafi-mongodb"
      },
      {
        "key": "spring.data.mongodb.port",
        "description": "Mongo server port. Cannot be set with URI.",
        "defaultValue": "27017"
      },
      {
        "key": "spring.data.mongodb.database",
        "description": "Database name.",
        "defaultValue": "deltafi"
      },
      {
        "key": "spring.data.mongodb.username",
        "description": "Login user of the mongo server. Cannot be set with URI.",
        "defaultValue": "mongouser"
      },
      {
        "key": "spring.data.mongodb.password",
        "description": "Login password of the mongo server. Cannot be set with URI.",
        "defaultValue": "${MONGO_PASSWORD}"
      },
      {
        "key": "spring.data.mongodb.authentication-database",
        "description": "Authentication database name.",
        "defaultValue": "deltafi"
      },
      {
        "key": "spring.task.scheduling.pool.size",
        "description": "Maximum allowed number of threads.",
        "defaultValue": "32"
      },
      {
        "key": "quarkus.http.port",
        "description": "The HTTP port the application will run on.",
        "defaultValue": "8080"
      },
      {
        "key": "quarkus.http.limits.max-body-size",
        "description": "The maximum size of a request body.",
        "defaultValue": "1024M"
      },
      {
        "key": "quarkus.log.level",
        "description": "The log level of the root category, which is used as the default log level for all categories.",
        "defaultValue": "INFO",
        "hidden": true,
        "refreshable": false,
        "editable": false
      },
      {
        "key": "quarkus.log.console.json",
        "description": "Determine whether to enable the JSON console formatting extension, which disables \"normal\" console formatting.",
        "defaultValue": "false",
        "hidden": true,
        "refreshable": false,
        "editable": false
      },
      {
        "key": "quarkus.log.console.color",
        "description": "Enable colors in console logs.",
        "defaultValue": "false",
        "hidden": true,
        "refreshable": false,
        "editable": false
      },
      {
        "key": "deltafi.apiUrl",
        "description": "The URL used to reach the DeltaFi API",
        "defaultValue": "http://deltafi-api-service",
        "hidden": true,
        "refreshable": false,
        "editable": false
      },
      {
        "key": "deltafi.checks.actionQueue.sizeThreshold",
        "description": "Threshold for Action Queue size check.",
        "defaultValue": "0",
        "hidden": false,
        "refreshable": true,
        "editable": true
      },
      {
        "key": "deltafi.requeueSeconds",
        "description": "Time to wait for an action to finish processing a DeltaFile before requeuing the action.",
        "defaultValue": "30",
        "hidden": false,
        "refreshable": true,
        "editable": true
      },
      {
        "key": "deltafi.deltaFileTtl",
        "description": "Duration that a DeltaFile should live, any records older will be removed.",
        "defaultValue": "14d",
        "hidden": false,
        "refreshable": true,
        "editable": true
      },
      {
        "key": "deltafi.delete.onCompletion",
        "description": "Immediately remove DeltaFile after it is processed.",
        "defaultValue": "false",
        "hidden": false,
        "refreshable": true,
        "editable": true
      },
      {
        "key": "deltafi.delete.frequency",
        "description": "Frequency that the delete action is triggered.",
        "defaultValue": "PT1M",
        "hidden": false,
        "refreshable": true,
        "editable": true
      },
      {
        "key": "deltafi.housekeeping.minio.initialDelaySeconds",
        "description": "Initial delay before starting the housekeeping job.",
        "defaultValue": "60",
        "hidden": false,
        "refreshable": true,
        "editable": true
      },
      {
        "key": "deltafi.housekeeping.minio.delaySeconds",
        "description": "Frequency that the housekeeping job should run.",
        "defaultValue": "3600",
        "hidden": false,
        "refreshable": true,
        "editable": true
      },
      {
        "key": "deltafi.housekeeping.minio.objectMinimumAgeForRemovalSeconds",
        "description": "Objects that have existed longer than this threshold will be removed.",
        "defaultValue": "900",
        "hidden": false,
        "refreshable": true,
        "editable": true
      },
      {
        "key": "graphql.urls.core-domain",
        "description": "URL of the core-domain service",
        "defaultValue": "http://deltafi-core-domain-service/graphql"
      },
      {
        "key": "smallrye.config.mapping.validate-unknown",
        "description": "When true unknown properties will cause the application to fail to start.",
        "defaultValue": "true",
        "hidden": true,
        "refreshable": false,
        "editable": false
      },
      {
        "key": "minio.url",
        "description": "The URL used to reach MinIO",
        "defaultValue": "http://deltafi-minio:9000"
      },
      {
        "key": "minio.access-key",
        "description": "The access-key used to access MinIO",
        "defaultValue": "${MINIO_ACCESSKEY}"
      },
      {
        "key": "minio.secret-key",
        "description": "The secret-key used to access MinIO",
        "defaultValue": "${MINIO_SECRETKEY}"
      },
      {
        "key": "minio.part-size",
        "description": "Limit the upload size to MinIO to the given size.",
        "defaultValue": "100000000"
      },
      {
        "key": "redis.url",
        "description": "The URL used to reach redis",
        "defaultValue": "http://deltafi-redis-master:6379"
      },
      {
        "key": "redis.password",
        "description": "The password used to access redis",
        "defaultValue": "${REDIS_PASSWORD}"
      },
      {
        "key": "deltafi.systemName",
        "description": "Name of the DeltaFi cluster",
        "defaultValue": "deltafi",
        "editable": true
      }
    ]
  },
  {
    "id": "action-kit",
    "displayName": "Action-Kit Properties",
    "description": "Properties shared across all installed actions.",
    "properties": [
      {
        "key": "actions.action-polling-initial-delay-ms",
        "description": "Initial delay before actions begin listening for work.",
        "defaultValue": "3000"
      },
      {
        "key": "actions.action-polling-period-ms",
        "description": "Set how often actions should listen for new work.",
        "defaultValue": "100"
      },
      {
        "key": "actions.action-registration-period-ms",
        "description": "Frequency that the actions register with the core system.",
        "defaultValue": "10000"
      },
      {
        "key": "actions.ssl.protocol",
        "description": "The SSL protocol to use.",
        "editable": true,
        "defaultValue": "TLSv1.2"
      },
      {
        "key": "actions.ssl.key-store",
        "description": "The path to the key store that holds the SSL certificate.",
        "editable": true,
        "defaultValue": "/etc/pki/keyStore.p12"
      },
      {
        "key": "actions.ssl.key-store-password",
        "description": "The password used to access the key store. This should be set via the KEYSTORE_PASSWORD environment variable.",
        "editable": false,
        "defaultValue": "${KEYSTORE_PASSWORD:not-set}"
      },
      {
        "key": "actions.ssl.key-store-type",
        "description": "The type of the key store.",
        "editable": true,
        "defaultValue": "PKCS12"
      },
      {
        "key": "actions.ssl.trust-store",
        "description": "The path to the trust store that holds SSL certificates.",
        "editable": true,
        "defaultValue": "/etc/pki/trustStore.jks"
      },
      {
        "key": "actions.ssl.trust-store-password",
        "description": "The password used to access the trust store. This should be set via the TRUSTSTORE_PASSWORD environment variable.",
        "editable": false,
        "defaultValue": "${TRUSTSTORE_PASSWORD:not-set}"
      },
      {
        "key": "actions.ssl.trust-store-type",
        "description": "The type of the trust store.",
        "editable": true,
        "defaultValue": "JKS"
      },
      {
        "key": "actions.hostname",
        "description": "Hostname of the server running the action.",
        "defaultValue": null
      }
    ]
  }
]
