#
#    DeltaFi - Data transformation and enrichment platform
#
#    Copyright 2022 DeltaFi Contributors <deltafi@deltafi.org>
#
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
#

type ErrorDomain {
    originator: DeltaFile! # DeltaFile that errored
    originatorDid: String! # Hoisted up for filtering
    fromAction: String! # Originating action
    cause: String! # Error message (from exception, etc.)
    context: String # Stack trace, etc.
}

input ErrorInput {
    cause: String!
    context: String
}

extend type Query {
    # Get error by error did
    getError(did: String!) : ErrorDomain!
    # Get list of errors for a given DID
    getErrorsFor(originatorDid: String!) : [ErrorDomain!]!
}

extend type Mutation {
    deleteError(did: String!) : Boolean!
    deleteErrors(dids: [String!]!) : [Boolean!]!
}