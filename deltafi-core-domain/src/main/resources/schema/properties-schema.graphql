#
#    DeltaFi - Data transformation and enrichment platform
#
#    Copyright 2022 DeltaFi Contributors <deltafi@deltafi.org>
#
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
#

enum PropertySource {
    EXTERNAL
    MONGO
    DEFAULT
}

type Property {
    key: String!                    # property key
    description: String!            # describe what this property does
    defaultValue: String            # value used if no value is set in git or mongo
    refreshable: Boolean!           # will apps automatically pick up changes to this property
    editable: Boolean!              # should this be editable from the GUI
    hidden: Boolean!                # should the GUI display this property
    value: String                   # value as set in git/file-system or mongo
    propertySource: PropertySource! # where the property was set (external for git/filesystem or mongo)
}

input PropertyInput {
    key: String!                    # property key
    description: String!            # describe what this property does
    defaultValue: String            # value used if no value is set in git or mongo
    refreshable: Boolean!           # will apps automatically pick up changes to this property
    editable: Boolean!              # should this be editable from the GUI
    hidden: Boolean!                # should the GUI display this property
    value: String                   # value as set in git/file-system or mongo
    propertySource: PropertySource  # not needed here but allows the Property class to be reused for input
}

type PropertySet {
    id: String!
    displayName: String!
    description: String!
    properties: [Property]!
}

input PropertySetInput {
    id: String!
    displayName: String!
    description: String!
    properties: [PropertyInput]!
}
