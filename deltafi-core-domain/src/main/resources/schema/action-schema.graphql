#
#    DeltaFi - Data transformation and enrichment platform
#
#    Copyright 2022 DeltaFi Contributors <deltafi@deltafi.org>
#
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
#

interface ActionSchema {
    id: String!
    paramClass: String!
    schema: JSON
    lastHeard: DateTime!
}

type DeleteActionSchema implements ActionSchema {
    id: String!
    paramClass: String!
    schema: JSON
    lastHeard: DateTime!
}

input DeleteActionSchemaInput {
    id: String!
    paramClass: String!
    schema: JSON
}

type EgressActionSchema implements ActionSchema {
    id: String!
    paramClass: String!
    schema: JSON
    lastHeard: DateTime!
}

input EgressActionSchemaInput {
    id: String!
    paramClass: String!
    schema: JSON
}

type EnrichActionSchema implements ActionSchema {
    id: String!
    paramClass: String!
    schema: JSON
    lastHeard: DateTime!
    requiresDomains: [String]!
    requiresEnrichment: [String]
}

input EnrichActionSchemaInput {
    id: String!
    paramClass: String!
    schema: JSON
    requiresDomains: [String]!
    requiresEnrichment: [String]
}

type FormatActionSchema implements ActionSchema {
    id: String!
    paramClass: String!
    schema: JSON
    lastHeard: DateTime!
    requiresDomains: [String]!
    requiresEnrichment: [String]
}

input FormatActionSchemaInput {
    id: String!
    paramClass: String!
    schema: JSON
    requiresDomains: [String]!
    requiresEnrichment: [String]
}

type LoadActionSchema implements ActionSchema {
    id: String!
    paramClass: String!
    schema: JSON
    lastHeard: DateTime!
    # deprecated - remove in future release
    consumes: String
}

input LoadActionSchemaInput {
    id: String!
    paramClass: String!
    schema: JSON
    # deprecated - remove in future release
    consumes: String
}

type TransformActionSchema implements ActionSchema {
    id: String!
    paramClass: String!
    schema: JSON
    lastHeard: DateTime!
    # deprecated - remove in future release
    consumes: String
    # deprecated - remove in future release
    produces: String
}

input TransformActionSchemaInput {
    id: String!
    paramClass: String!
    schema: JSON
    # deprecated - remove in future release
    consumes: String
    # deprecated - remove in future release
    produces: String
}

type ValidateActionSchema implements ActionSchema {
    id: String!
    paramClass: String!
    schema: JSON
    lastHeard: DateTime!
}

input ValidateActionSchemaInput {
    id: String!
    paramClass: String!
    schema: JSON
}

input ActionRegistrationInput {
    transformActions: [TransformActionSchemaInput!]
    loadActions: [LoadActionSchemaInput!]
    enrichActions: [EnrichActionSchemaInput!]
    formatActions: [FormatActionSchemaInput!]
    validateActions: [ValidateActionSchemaInput!]
    egressActions: [EgressActionSchemaInput!]
    deleteActions: [DeleteActionSchemaInput!]
}
